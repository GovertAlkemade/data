[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[project]
name = "nhflodata"
version = "0.2.0"
description = "Priporitory data part of the NHFLO modeling environment owned by HHNK, Artesia, and PWN."
readme = "README.md"
license = {file = "LICENSE.txt"}
requires-python = ">=3.9"
authors = [
  {name = "Onno Ebbens", email = "o.ebbens@artesia-water.nl"},
  {name = "Davíd Brakenhoff", email = "d.brakenhoff@artesia-water.nl"},
  {name = "Bas des Tombe", email = "bas.des.tombe@pwn.nl"},
]
maintainers = [
  {name = "Onno Ebbens", email = "o.ebbens@artesia-water.nl"},
  {name = "Davíd Brakenhoff", email = "d.brakenhoff@artesia-water.nl"},
  {name = "Bas des Tombe", email = "bas.des.tombe@pwn.nl"},
]
keywords = [
  "NHFLO",
]
classifiers = [
    "Development Status :: 5 - Production/Stable",
    "Intended Audience :: Developers",
    "Intended Audience :: Science/Research",
    "License :: OSI Approved :: BSD License",
    "Operating System :: Unix",
    "Operating System :: POSIX",
    "Operating System :: Microsoft :: Windows",
    "Programming Language :: Python",
    "Topic :: Utilities",
]

dependencies = ["pyyaml>=6.0.1",]

[project.optional-dependencies]
dev = [
    "hatch",
    "ruff",
    "isort",
    "black",
    "mypy",
    "types-PyYAML",     # for pyyaml types
    "pytest"
]

[tool.hatch.envs.default.scripts]
lint = [
  "ruff check .",
  "black --check .",
  "isort --check-only --diff .",
  "mypy src/",
]
format = ["black .", "isort .", "ruff check --fix .", "lint",]
test = ["pytest ./src/ ./tests/",]  # --doctest-modules
fast-test = ["pytest ./tests/ -m \"not slow\"",]

[tool.hatch.envs.matrix_test]
features = ["dev"]

[[tool.hatch.envs.matrix_test.matrix]]
python = ["3.9", "3.10", "3.11"]

[tool.hatch.envs.matrix_test.scripts]
test = ["pytest ./tests/",]  # --doctest-modules

[tool.pytest.ini_options]
testpaths = ["tests"]
markers = [
    "slow: marks tests as slow (deselect with '-m \"not slow\"')",
]

[tool.ruff]
select = [  # It would be nice to have the commented out checks working.
  "E",  # pycodestyle
  "F",  # pyflakes
  # "B",  # flake8-bugbear
  # "D",  # pydocstyle
  # "C90",  # mccabe complexity
  # "N",  # PEP8-naming
  # "UP",  # pyupgrade (upgrade syntax to current syntax)
  "PLE",  # Pylint error https://github.com/charliermarsh/ruff#error-ple
  # "PLR",  # Pylint refactor (e.g. too-many-arguments)
  # "PLW",  # Pylint warning (useless-else-on-loop)
]
extend-select = [
  # "D401",  # First line should be in imperative mood
  # "D400",  # First line should end in a period.
  # "D404",  # First word of the docstring should not be "This"
  "TID252",  # No relative imports (not pep8 compliant)
]
ignore = [
  "PLR2004",  # magic value used in comparson
  "E501",  # Line too long (want to have fixed
]
# Allow autofix for all enabled rules (when `--fix`) is provided.
fixable = ["E", "F"]
unfixable = []
line-length = 88
exclude = ["build"]
# Allow unused variables when underscore-prefixed.
dummy-variable-rgx = "^(_+|(_+[a-zA-Z0-9_]*[a-zA-Z0-9]+?))$"
# Minimum supported Python version
target-version = "py310"

[tool.ruff.per-file-ignores]
"tests/**" = ["D"]

[tool.ruff.pydocstyle]
convention = "google"

[tool.ruff.mccabe]
max-complexity = 10

[tool.isort]
py_version=310
force_single_line = true
known_first_party = ["nhflomodels"]
skip = [".gitignore", ".tox", ".venv"]
src_paths = ["src", "tests"]
line_length = 120

[tool.black]
line-length = 88
target-version = ['py310',]
extend-exclude = ".venv"

[tool.mypy]
ignore_missing_imports = true  # Preferably false, but matplotlib, scipy and statsmodels are missing typing stubs
python_version = "3.10"